{"version":3,"file":"static/js/797.fba7c654.chunk.js","mappings":"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","sources":["api.js","components/MovieListItem/MovieListItem.jsx","webpack://react-homework-template/./src/components/MovieList/movieList.module.css?ccba","components/MovieList/MovieList.jsx","pages/MoviesPage.jsx","webpack://react-homework-template/./src/pages/MoviePage.module.css?ca7e"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '62b7926c91251984ba38d06783ddb132';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieListItem = ({ id, title, moviepath }) => {\n  const location = useLocation();\n\n  // Check if the movie has an image, if not, do not render the component\n  if (!moviepath) {\n    return null; // Skip rendering if no image path is provided\n  }\n\n  return (\n    <li key={id}>\n      <Link\n        to={`/movies/${id}`}\n        state={{\n          from: location,\n          movieTitle: 'Random string that i want to pass',\n        }}\n      >\n        <img\n          width=\"260\"\n          height=\"330\"\n          src={`https://image.tmdb.org/t/p/w500${moviepath}`}\n          alt={title}\n        />\n        <h4>{title}</h4>\n      </Link>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  moviepath: PropTypes.string, // Include PropType for moviepath\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieUl\":\"movieList_movieUl__hwNJP\"};","import PropTypes from 'prop-types';\nimport { MovieListItem } from 'components/MovieListItem/MovieListItem';\nimport css from './movieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={css.movieUl}>\n      {movies.map(({ id, title, backdrop_path }) => (\n        <MovieListItem\n          key={id}\n          id={id}\n          title={title}\n          moviepath={backdrop_path}\n        />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovieByQuery } from 'api';\nimport { MovieList } from '../components/MovieList/MovieList';\nimport { Outlet, useSearchParams, useParams } from 'react-router-dom';\nimport css from './MoviePage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? 'Friends'; // Default search query is 'Friends'\n\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!movieName.trim()) return;\n      setIsLoading(true);\n\n      try {\n        const movies = await fetchMovieByQuery(movieName);\n        setMovies(movies);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieName]);\n\n  return (\n    <div>\n      {!movieId && (\n        <div>\n          <div className={css.inputWrapper}>\n            <input\n              type=\"text\"\n              className={css.input}\n              onChange={e => updateQueryString(e.target.value)}\n              placeholder=\"Search movies...\"\n            />\n          </div>\n\n          {isLoading ? (\n            <p style={{ textAlign: 'center' }}>Loading...</p>\n          ) : (\n            <MovieList movies={movies} />\n          )}\n        </div>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"MoviePage_inputWrapper__JKoBL\",\"input\":\"MoviePage_input__QL4+I\",\"movieDetailsPageDiv\":\"MoviePage_movieDetailsPageDiv__ERRly\",\"movieDetailsPageDivAdd\":\"MoviePage_movieDetailsPageDivAdd__WdEO4\"};"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","MovieListItem","id","title","moviepath","location","useLocation","_jsx","children","_jsxs","Link","to","state","from","movieTitle","width","height","src","alt","MovieList","movies","className","css","map","backdrop_path","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useParams","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovies","_movies","trim","t0","console","error","type","onChange","e","query","target","value","placeholder","style","textAlign","Outlet"],"sourceRoot":""}